version: "3.9"
services:
  app:
    build: .
    container_name: http_service_app
    ports:
      - "8000:8000"
    environment:
      - HTTP_SERVICE_LOG_LEVEL=INFO
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@postgres:5432/http_service
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    container_name: http_service_pg
    environment:
      - POSTGRES_DB=http_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - default

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: http_service_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    ports:
      - "8082:80"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    networks:
      - default

  ngrok:
    image: ngrok/ngrok:3
    container_name: http_service_ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http --log=stdout --log-format=logfmt http_service_app:8000
    depends_on:
      - app
    networks:
      - default

volumes:
  pgdata:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

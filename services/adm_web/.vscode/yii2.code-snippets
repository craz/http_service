{
    "Yii2 Controller": {
        "prefix": "yii2-controller",
        "body": [
            "<?php",
            "",
            "namespace app\\controllers;",
            "",
            "use Yii;",
            "use yii\\web\\Controller;",
            "use yii\\web\\NotFoundHttpException;",
            "use yii\\filters\\VerbFilter;",
            "use yii\\filters\\AccessControl;",
            "",
            "/**",
            " * ${1:ControllerName} controller",
            " */",
            "class ${1:ControllerName}Controller extends Controller",
            "{",
            "    /**",
            "     * {@inheritdoc}",
            "     */",
            "    public function behaviors()",
            "    {",
            "        return [",
            "            'access' => [",
            "                'class' => AccessControl::class,",
            "                'rules' => [",
            "                    [",
            "                        'allow' => true,",
            "                        'roles' => ['@'],",
            "                    ],",
            "                ],",
            "            ],",
            "            'verbs' => [",
            "                'class' => VerbFilter::class,",
            "                'actions' => [",
            "                    'delete' => ['POST'],",
            "                ],",
            "            ],",
            "        ];",
            "    }",
            "",
            "    /**",
            "     * Lists all ${2:Model} models.",
            "     * @return mixed",
            "     */",
            "    public function actionIndex()",
            "    {",
            "        $searchModel = new ${2:Model}Search();",
            "        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);",
            "",
            "        return $this->render('index', [",
            "            'searchModel' => $searchModel,",
            "            'dataProvider' => $dataProvider,",
            "        ]);",
            "    }",
            "",
            "    /**",
            "     * Displays a single ${2:Model} model.",
            "     * @param integer $id",
            "     * @return mixed",
            "     * @throws NotFoundHttpException if the model cannot be found",
            "     */",
            "    public function actionView($id)",
            "    {",
            "        return $this->render('view', [",
            "            'model' => $this->findModel($id),",
            "        ]);",
            "    }",
            "",
            "    /**",
            "     * Creates a new ${2:Model} model.",
            "     * If creation is successful, the browser will be redirected to the 'view' page.",
            "     * @return mixed",
            "     */",
            "    public function actionCreate()",
            "    {",
            "        $model = new ${2:Model}();",
            "",
            "        if ($model->load(Yii::$app->request->post()) && $model->save()) {",
            "            return $this->redirect(['view', 'id' => $model->id]);",
            "        }",
            "",
            "        return $this->render('create', [",
            "            'model' => $model,",
            "        ]);",
            "    }",
            "",
            "    /**",
            "     * Updates an existing ${2:Model} model.",
            "     * If update is successful, the browser will be redirected to the 'view' page.",
            "     * @param integer $id",
            "     * @return mixed",
            "     * @throws NotFoundHttpException if the model cannot be found",
            "     */",
            "    public function actionUpdate($id)",
            "    {",
            "        $model = $this->findModel($id);",
            "",
            "        if ($model->load(Yii::$app->request->post()) && $model->save()) {",
            "            return $this->redirect(['view', 'id' => $model->id]);",
            "        }",
            "",
            "        return $this->render('update', [",
            "            'model' => $model,",
            "        ]);",
            "    }",
            "",
            "    /**",
            "     * Deletes an existing ${2:Model} model.",
            "     * If deletion is successful, the browser will be redirected to the 'index' page.",
            "     * @param integer $id",
            "     * @return mixed",
            "     * @throws NotFoundHttpException if the model cannot be found",
            "     */",
            "    public function actionDelete($id)",
            "    {",
            "        $this->findModel($id)->delete();",
            "",
            "        return $this->redirect(['index']);",
            "    }",
            "",
            "    /**",
            "     * Finds the ${2:Model} model based on its primary key value.",
            "     * If the model is not found, a 404 HTTP exception will be thrown.",
            "     * @param integer $id",
            "     * @return ${2:Model} the loaded model",
            "     * @throws NotFoundHttpException if the model cannot be found",
            "     */",
            "    protected function findModel($id)",
            "    {",
            "        if (($model = ${2:Model}::findOne($id)) !== null) {",
            "            return $model;",
            "        }",
            "",
            "        throw new NotFoundHttpException('The requested page does not exist.');",
            "    }",
            "}"
        ],
        "description": "Создает базовый контроллер Yii2"
    },
    "Yii2 Model": {
        "prefix": "yii2-model",
        "body": [
            "<?php",
            "",
            "namespace app\\models;",
            "",
            "use Yii;",
            "use yii\\db\\ActiveRecord;",
            "use yii\\behaviors\\TimestampBehavior;",
            "",
            "/**",
            " * This is the model class for table \"${1:table_name}\".",
            " *",
            " * @property int $id",
            " * @property string $created_at",
            " * @property string $updated_at",
            " */",
            "class ${2:ModelName} extends ActiveRecord",
            "{",
            "    /**",
            "     * {@inheritdoc}",
            "     */",
            "    public static function tableName()",
            "    {",
            "        return '${1:table_name}';",
            "    }",
            "",
            "    /**",
            "     * {@inheritdoc}",
            "     */",
            "    public function behaviors()",
            "    {",
            "        return [",
            "            TimestampBehavior::class => [",
            "                'class' => TimestampBehavior::class,",
            "                'value' => new \\yii\\db\\Expression('NOW()'),",
            "            ],",
            "        ];",
            "    }",
            "",
            "    /**",
            "     * {@inheritdoc}",
            "     */",
            "    public function rules()",
            "    {",
            "        return [",
            "            [['id'], 'integer'],",
            "            [['created_at', 'updated_at'], 'safe'],",
            "        ];",
            "    }",
            "",
            "    /**",
            "     * {@inheritdoc}",
            "     */",
            "    public function attributeLabels()",
            "    {",
            "        return [",
            "            'id' => 'ID',",
            "            'created_at' => 'Created At',",
            "            'updated_at' => 'Updated At',",
            "        ];",
            "    }",
            "}"
        ],
        "description": "Создает базовую модель Yii2"
    },
    "Yii2 View": {
        "prefix": "yii2-view",
        "body": [
            "<?php",
            "",
            "/* @var $this yii\\web\\View */",
            "/* @var $model app\\models\\${1:Model} */",
            "",
            "use yii\\helpers\\Html;",
            "use yii\\widgets\\DetailView;",
            "",
            "$this->title = $model->id;",
            "$this->params['breadcrumbs'][] = ['label' => '${1:Model}s', 'url' => ['index']];",
            "$this->params['breadcrumbs'][] = $this->title;",
            "?>",
            "<div class=\"${2:model}-view\">",
            "",
            "    <h1><?= Html::encode($this->title) ?></h1>",
            "",
            "    <p>",
            "        <?= Html::a('Update', ['update', 'id' => $model->id], ['class' => 'btn btn-primary']) ?>",
            "        <?= Html::a('Delete', ['delete', 'id' => $model->id], [",
            "            'class' => 'btn btn-danger',",
            "            'data' => [",
            "                'confirm' => 'Are you sure you want to delete this item?',",
            "                'method' => 'post',",
            "            ],",
            "        ]) ?>",
            "    </p>",
            "",
            "    <?= DetailView::widget([",
            "        'model' => $model,",
            "        'attributes' => [",
            "            'id',",
            "            'created_at',",
            "            'updated_at',",
            "        ],",
            "    ]) ?>",
            "",
            "</div>"
        ],
        "description": "Создает базовое представление Yii2"
    },
    "Yii2 Form": {
        "prefix": "yii2-form",
        "body": [
            "<?php",
            "",
            "/* @var $this yii\\web\\View */",
            "/* @var $model app\\models\\${1:Model} */",
            "/* @var $form yii\\widgets\\ActiveForm */",
            "",
            "use yii\\helpers\\Html;",
            "use yii\\widgets\\ActiveForm;",
            "",
            "?>",
            "",
            "<div class=\"${2:model}-form\">",
            "",
            "    <?php $form = ActiveForm::begin(); ?>",
            "",
            "    <?= $form->field($model, 'id')->textInput() ?>",
            "",
            "    <div class=\"form-group\">",
            "        <?= Html::submitButton('Save', ['class' => 'btn btn-success']) ?>",
            "    </div>",
            "",
            "    <?php ActiveForm::end(); ?>",
            "",
            "</div>"
        ],
        "description": "Создает базовую форму Yii2"
    }
}
